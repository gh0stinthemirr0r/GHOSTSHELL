import{c as d,o as p,v as a,e as s,i as x,m as v,q as m}from"./ssr.js";import"@tauri-apps/api/tauri";import"@tauri-apps/api/event";import{T as r}from"./target.js";import{a as i,d as u,i as b}from"./_page.js";import{C as g}from"./clock.js";import{X as f}from"./circle-x.js";const y={code:".line-clamp-2.svelte-efadq{display:-webkit-box;-webkit-line-clamp:2;-webkit-box-orient:vertical;overflow:hidden}",map:null};function l(t){switch(t){case"Completed":case"Active":return"text-green-400";case"Failed":case"Lost":case"Terminated":return"text-red-400";case"PolicyDenied":return"text-yellow-400";case"Scanning":case"Connecting":return"text-cyan-400";default:return"text-gray-400"}}const A=d((t,h,$,w)=>{let n=[],o=null;p(()=>{});function c(e){switch(e){case"Completed":case"Active":return b;case"Failed":case"Lost":case"Terminated":return f;case"PolicyDenied":return i;case"Scanning":case"Connecting":return u;default:return g}}return t.css.add(y),`<div class="h-full flex"> <div class="w-80 frosted border-r border-gray-800/50 flex flex-col"> <div class="p-4 border-b border-gray-800/50"><div class="flex items-center justify-between mb-4"><div class="flex items-center space-x-2">${a(r,"Target").$$render(t,{class:"w-5 h-5 text-red-400"},{},{})} <h2 class="text-lg font-semibold text-white" data-svelte-h="svelte-1ttnsar">Exploit Engine</h2></div> <button class="p-2 rounded-lg bg-red-500/20 hover:bg-red-500/30 text-red-400 transition-colors" title="Add Target">${a(r,"Target").$$render(t,{size:16},{},{})}</button></div> <div class="flex items-center space-x-2 text-sm text-gray-400 mb-4">${a(i,"Shield").$$render(t,{class:"w-4 h-4 text-green-400"},{},{})} <span data-svelte-h="svelte-4r02vj">Post-Quantum Secured</span></div>  </div>  <div class="flex border-b border-gray-800/50"><button class="${"flex-1 px-3 py-2 text-sm transition-colors "+s("text-red-400 border-b-2 border-red-400",!0)}">Targets</button> <button class="${"flex-1 px-3 py-2 text-sm transition-colors "+s("text-gray-400 hover:text-white",!0)}">Exploits</button> <button class="${"flex-1 px-3 py-2 text-sm transition-colors "+s("text-gray-400 hover:text-white",!0)}">Sessions</button></div>  <div class="flex-1 overflow-y-auto p-4 space-y-2">${`${x(n,e=>`<div class="${"p-3 rounded-lg border transition-all cursor-pointer "+s(o?.id===e.id?"bg-red-500/10 border-red-500/50":"bg-black/20 border-gray-700/50 hover:border-gray-600/50",!0)}"><div class="flex items-center justify-between mb-2"><div class="flex items-center space-x-2">${a(c(e.scan_status)||v,"svelte:component").$$render(t,{class:"w-4 h-4 "+l(e.scan_status)},{},{})} <span class="text-white font-medium text-sm">${s(e.host)}</span></div> ${e.port?`<span class="text-xs text-gray-400">:${s(e.port)}</span>`:""}</div> <div class="text-xs text-gray-400 mb-1">Status: <span class="${s(m(l(e.scan_status)),!0)+" svelte-efadq"}">${s(e.scan_status)}</span></div> ${e.vulnerabilities.length>0?`<div class="text-xs"><span class="text-red-400">${s(e.vulnerabilities.length)} vulnerabilities</span> </div>`:""} </div>`)} ${n.length===0?`<div class="text-center text-gray-400 py-8">${a(r,"Target").$$render(t,{class:"w-12 h-12 mx-auto mb-4 opacity-50"},{},{})} <p data-svelte-h="svelte-novpj1">No targets yet</p> <p class="text-sm" data-svelte-h="svelte-1cnurc5">Add a target to begin scanning</p></div>`:""}`}</div></div>  <div class="flex-1 flex flex-col">${`${`${` <div class="flex-1 flex items-center justify-center"><div class="text-center">${a(r,"Target").$$render(t,{class:"w-24 h-24 mx-auto mb-6 text-red-400 opacity-50"},{},{})} <h3 class="text-2xl font-semibold text-white mb-2" data-svelte-h="svelte-17hwmr0">Exploit Engine</h3> <p class="text-gray-400 mb-6" data-svelte-h="svelte-fazg1z">Advanced penetration testing and exploitation framework</p> <div class="space-y-2 text-sm text-gray-400" data-svelte-h="svelte-1tdjo2j"><p>• Vulnerability scanning and assessment</p> <p>• Exploit development and execution</p> <p>• Post-quantum secure payload delivery</p> <p>• Session management and persistence</p></div></div></div>`}`}`}</div></div>      `});export{A as default};
