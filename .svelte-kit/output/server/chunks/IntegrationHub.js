import{c,v as s,e as t,i as l,m as p}from"./ssr.js";import"@tauri-apps/api/tauri";/* empty css               */import{I as b,Z as i,a as h,j as v,G as $}from"./_page.js";import{R as m}from"./refresh-cw.js";import{K as u}from"./key.js";const f=c((e,r,d,a)=>{const o=[["path",{d:"M18 16.98h-5.99c-1.1 0-1.95.94-2.48 1.9A4 4 0 0 1 2 17c.01-.7.2-1.4.57-2"}],["path",{d:"m6 17 3.13-5.78c.53-.97.1-2.18-.5-3.1a4 4 0 1 1 6.89-4.06"}],["path",{d:"m12 6 3.13 5.73C15.66 12.7 16.9 13 18 13a4 4 0 0 1 0 8"}]];return`${s(b,"Icon").$$render(e,Object.assign({},{name:"webhook"},r,{iconNode:o}),{},{default:()=>`${a.default?a.default({}):""}`})}`}),x=f,C=c((e,r,d,a)=>{let o="dashboard";return`<div class="h-full flex flex-col"> <div class="frosted border-b border-gray-800/50 p-4"><div class="flex items-center justify-between mb-4"><div class="flex items-center space-x-3">${s(i,"Zap").$$render(e,{class:"w-6 h-6 cyberpunk-icon"},{},{})} <h1 class="text-2xl font-bold text-white" data-svelte-h="svelte-vshm18">Integration Hub</h1></div> <div class="flex items-center space-x-2"><button class="px-4 py-2 rounded-lg bg-orange-500/20 hover:bg-orange-500/30 cyberpunk-icon transition-colors" title="Import Fresh Data" >${s(m,"RefreshCw").$$render(e,{class:"w-4 h-4  inline mr-2"},{},{})} ${t("Import Data")}</button>  <div class="flex items-center space-x-2 text-sm cyberpunk-icon">${s(h,"Shield").$$render(e,{class:"w-4 h-4 cyberpunk-icon"},{},{})} <span data-svelte-h="svelte-4r02vj">Post-Quantum Secured</span></div></div></div>  <div class="flex space-x-1">${l([{id:"dashboard",label:"Dashboard",icon:v},{id:"endpoints",label:"API Endpoints",icon:$},{id:"webhooks",label:"Webhooks",icon:x},{id:"api-keys",label:"API Keys",icon:u},{id:"integrations",label:"Integrations",icon:i}],n=>`<button class="${"flex items-center space-x-2 px-4 py-2 rounded-lg transition-colors "+t(o===n.id?"bg-orange-500/20 cyberpunk-icon border border-orange-500/50":"cyberpunk-icon hover:text-white hover:bg-gray-800/50",!0)}">${s(n.icon||p,"svelte:component").$$render(e,{class:"w-4 h-4"},{},{})} <span>${t(n.label)}</span> </button>`)}</div></div>  <div class="flex-1 overflow-hidden">  <div class="p-6 space-y-6 overflow-y-auto"></div></div></div>          `});export{C as default};
