[package]
name = "ghostshell"
version = "0.1.0"
edition = "2021"
authors = ["GHOSTSHELL Team"]
description = "Post-Quantum Secure Terminal Environment"
license = "MIT"

[build-dependencies]
tauri-build = { version = "1.0", features = [] }

[dependencies]
# Phase 2 Security Crates
ghost_pq = { path = "../crates/ghost_pq" }

ghost_vault = { path = "../crates/ghost_vault" }
ghost_log = { path = "../crates/ghost_log" }
ghost_dash = { path = "../crates/ghost_dash" }
ghost_report = { path = "../crates/ghost_report" }
ghost_script = { path = "../crates/ghost_script" }

# Phase 10 Notification Crates
ghost_notify = { path = "../crates/ghost_notify" }
ghost_alert = { path = "../crates/ghost_alert" }

# Phase 11 Theme Crates
ghost_theme = { path = "../crates/ghost_theme" }
ghost_ai = { path = "../crates/ghost_ai" }
ghost_errmap = { path = "../crates/ghost_errmap" }
ghost_explain = { path = "../crates/ghost_explain" }
ghost_link = { path = "../crates/ghost_link" }

# Phase 12 Compliance Crates
ghost_align = { path = "../crates/ghost_align" }
ghost_controls = { path = "../crates/ghost_controls" }
ghost_evidence = { path = "../crates/ghost_evidence" }
ghost_trends = { path = "../crates/ghost_trends" }

# Phase 14 Browser Crates
ghost_browse = { path = "../crates/ghost_browse" }
ghost_tls = { path = "../crates/ghost_tls" }
ghost_autofill = { path = "../crates/ghost_autofill" }
ghost_download = { path = "../crates/ghost_download" }

# Phase 16 Navigation Crates
ghost_nav = { path = "../crates/ghost_nav" }
ghost_prefs = { path = "../crates/ghost_prefs" }

# Tauri and Serialization
serde_json = "1.0"
csv = "1.3"
serde = { version = "1.0", features = ["derive"] }
tauri = { version = "1.0", features = [
  "fs-copy-file", 
  "fs-create-dir", 
  "fs-read-dir", 
  "fs-read-file", 
  "fs-remove-dir", 
  "fs-remove-file", 
  "fs-rename-file", 
  "fs-write-file", 
  "shell-open", 
  "window-close", 
  "window-hide", 
  "window-maximize", 
  "window-minimize", 
  "window-show", 
  "window-start-dragging", 
  "window-unmaximize", 
  "window-unminimize",
  "window-create",
  "window-set-title",
  "http-all",
  "dialog"
] }

# Core Dependencies
anyhow = "1.0"
tracing = "0.1"
tracing-subscriber = { version = "0.3", features = ["env-filter"] }
tracing-appender = "0.2"
tokio = { version = "1.0", features = ["full"] }
uuid = { version = "1.0", features = ["v4"] }
chrono = { version = "0.4", features = ["serde"] }
async-trait = "0.1"
regex = "1.0"
sha3 = "0.10"
dirs = "5.0"
url = "2.4"
if-addrs = "0.10"

# PCAP capture and analysis dependencies (BruteShark-inspired) - Pure Rust + Windows Raw Sockets
pcap-file = "2.0"  # Pure Rust PCAP file reading/writing
etherparse = "0.15"
lazy_static = "1.4"
base64 = "0.21"    # For HTTP Basic Auth decoding
hex = "0.4"        # For file signature parsing and existing usage
md5 = "0.7"        # For file hash calculation and analysis fingerprints
socket2 = "0.5"    # Advanced socket operations
html-escape = "0.2" # For HTML export functionality
libc = "0.2"       # System calls

# Enhanced CSV processing dependencies
encoding_rs = "0.8"      # Character encoding detection and conversion
encoding_rs_io = "0.1"   # Encoding-aware I/O
thiserror = "1.0"        # Better error handling
chardet = "0.2"          # Character encoding detection
# csv-sniffer = "0.2"      # CSV format detection (removed due to API issues)
strsim = "0.10"          # String similarity for header matching
indicatif = "0.17"       # Progress bars and indicators
walkdir = "2"            # Directory traversal
tempfile = "3"           # Temporary file handling

# Export functionality dependencies
rust_xlsxwriter = "0.64" # Excel XLSX export
printpdf = "0.6"         # PDF generation
reqwest = { version = "0.11", features = ["json", "rustls-tls"] } # HTTP client for PAN-OS API

# Real packet capture - optional dependencies (only if Npcap available)
pcap = { version = "1.3", optional = true }       # Main pcap library
pnet = { version = "0.34", optional = true }      # Packet construction and parsing
pnet_datalink = { version = "0.34", optional = true }  # Data link layer

# Terminal Backend (Phase 3) - Embedded Nushell (stable version)
nu-engine = "0.105.1"
nu-parser = "0.105.1"
nu-protocol = "0.105.1"
nu-command = "0.105.1"
portable-pty = "0.8"
futures = "0.3"

# SSH Client with Post-Quantum Support (Phase 3)
russh = "0.40"
russh-keys = "0.40"

# Network Topology (Phase 3)
rand = "0.8"

# Phase 12 Additional Dependencies
zip = "0.6"

# Window effects for acrylic/mica
window-vibrancy = "0.4"

# Windows-specific dependencies
[target.'cfg(windows)'.dependencies]
winreg = "0.52"
windows = { version = "0.52", features = [
    "Win32_Foundation",
    "Win32_Graphics_Dwm",
    "Win32_UI_WindowsAndMessaging",
    "Win32_System_Console",
    "Win32_System_Threading",
    "Win32_UI_Shell",
    "Win32_System_Registry",
    "Win32_System_Environment",
    "Win32_Storage_FileSystem",
    "Win32_NetworkManagement_IpHelper",
    "Win32_NetworkManagement_Ndis",
    "Win32_Networking_WinSock",
    "Win32_System_Wmi",
    "Win32_System_Pipes",
    "Win32_System_IO",
    "Win32_Security",
    "Win32_System_Services",
    "Win32_System_LibraryLoader",
    "Win32_System_Diagnostics_ToolHelp",
    "Win32_System_Com",
    "Win32_Globalization",
] }

[target.'cfg(target_os = "macos")'.dependencies]
cocoa = "0.25"
objc2 = "0.4"

# Prevent console window from appearing on Windows
[[bin]]
name = "ghostshell"
path = "src/main.rs"

[features]
default = ["custom-protocol"]
custom-protocol = ["tauri/custom-protocol"]
pcap-capture = ["pcap", "pnet", "pnet_datalink"]  # Enable real packet capture when Npcap is available
